pipeline{ //IP01 Pipeline - EGC
    agent any
    tools{
        nodejs 'nodejs'
    }
    stages{
        stage('Clone Repository'){
            steps{
                git 'https://github.com/egcharchi/gallery'
            }

        }
        stage('Build'){
            steps{
                //Building - Installation of dependencies
                sh 'npm install'
                sh 'npm install body-parser'
                sh 'npm install ejs'
                sh 'npm install express'
                sh 'npm install mongodb'
                sh 'npm install mongoose'
                sh 'npm install multer'
                sh 'npm install uuid'
            }
        }
        stage('Test'){
            steps{
                //Testing
                sh 'npm test'
            }
        }
        stage('Deployment to Heroku or Render'){
            steps{
                //Deployment to production environmen
            withCredentials([usernameColonPassword(credentialsId: 'herokus', variable: 'HEROKU_CREDENTIALS')]){
                sh 'git push https://${HEROKU_CREDENTIALS}@git.heroku.com/ip01-gallery.git master'
            }

            }
        }
    }
    post{
        always{
                //Slack Message 
            slackSend color: "good", message: "Gallery Build, Test and Deploy Job Started.  Details: Job Name: ${env.JOB_NAME}, Buld Number: ${env.BUILD_NUMBER}, Click: ${env.BUILD_URL} to see the build details and click https://ip01-gallery.herokuapp.com/ to view app."
        }
        failure{
                //Email on Failure
                emailext body: "The Gallery Build has failed.  Please see details here: ${env.BUILD_URL} and attached.",
                subject: "Jenkins Build - Job Name: ${env.JOB_NAME}, Build Number: ${env.BUILD_NUMBER}, Status - Failure",
                to: 'eric.charchi@student.moringaschool.com, eg.pbstudio@outlook.com',
                attachLog: true

        }
    }
}